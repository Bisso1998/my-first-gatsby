{"version":3,"sources":["webpack:///./src/pages/githubInfo.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/layout.js"],"names":["FetchGithubInfo","props","_this","_Component","call","this","fetchGitHubInfo","console","log","setState","loading","axios","get","then","data","username","name","company","catch","error","state","componentDidMount","render","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","onClick","Component","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","createContext","object","func","__webpack_exports__","children","react_default","style","margin","maxWidth","padding","gatsby_link_default","to"],"mappings":"uKAKMA,cACF,SAAAA,EAAaC,GAAO,IAAAC,EAAA,OAChBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MAWFC,gBAAkB,WACdC,QAAQC,IAAI,oBACdN,EAAKO,SAAS,CAAEC,SAAS,IACzBC,IACGC,IADH,wCAEGC,KAAK,SAAAC,GACJP,QAAQC,IAAIM,GACZZ,EAAKO,SAAS,CACZC,SAAS,EACTK,SAAUD,EAAKA,KAAKE,KACpBC,QAASH,EAAKA,KAAKG,YAGtBC,MAAM,SAAAC,GACLjB,EAAKO,SAAS,CAAEC,SAAS,EAAOS,aAxBpCjB,EAAKkB,MAAQ,CACTL,SAAU,KACVE,QAAS,KACTP,SAAS,GALGR,sCAQlBmB,kBAAA,WACEhB,KAAKC,qBAqBLgB,OAAA,WACI,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAA,iCAEIpB,KAAKe,MAAMV,QACPa,EAAAC,EAAAC,cAAA,yCAEAF,EAAAC,EAAAC,cAAA,UAAKpB,KAAKe,MAAML,SAAhB,aAAoCV,KAAKe,MAAMH,SAGvDM,EAAAC,EAAAC,cAAA,UAAQE,QAAUtB,KAAKC,iBAAvB,uBA1CUsB,aAiDf5B,iCCtDf,IAAsB6B,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oGCMzCK,EAAmB,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAKH,EAIEI,IAAMhB,cAAciB,IAApBC,OAAAC,OAAA,CACLR,WACAC,iBACGA,EAAcQ,OANV,MAUXX,EAAiBY,UAAY,CAC3BV,SAAUW,IAAUC,MAAM,CACxBR,SAAUO,IAAUE,OAAOC,aAC1BA,YAGUhB,0GCZYO,IAAMU,cAAc,IA0CvCJ,IAAUK,OACTL,IAAUE,OAAOC,WAChBH,IAAUM,KACRN,IAAUM,KCvDPC,EAAA,WAAAnB,GAAA,IAAGoB,EAAHpB,EAAGoB,SAAH,OACbC,EAAAhC,EAAAC,cAAA,OAAKgC,MAAO,CAAEC,OAAM,YAAeC,SAAU,OAAQC,QAAO,WAA5D,gBAEAJ,EAAAhC,EAAAC,cAAA,WACA+B,EAAAhC,EAAAC,cAACoC,EAAArC,EAAD,CAAMsC,GAAG,aAAT,WACAN,EAAAhC,EAAAC,cAAA,WACA+B,EAAAhC,EAAAC,cAACoC,EAAArC,EAAD,CAAMsC,GAAG,KAAT,QACAN,EAAAhC,EAAAC,cAAA,WACA+B,EAAAhC,EAAAC,cAACoC,EAAArC,EAAD,CAAMsC,GAAG,eAAT,cAGGP","file":"component---src-pages-github-info-js-2462783682900113554f.js","sourcesContent":["import React, { Component } from \"react\"\n// import { graphql } from \"gatsby\"\nimport axios from \"axios\"\nimport Layout from \"../components/layout\"\n\nclass FetchGithubInfo extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            username: null,\n            company: null,\n            loading: false,\n        }\n      }\n      componentDidMount() {\n        this.fetchGitHubInfo()\n      }\n\n      fetchGitHubInfo = () => {\n          console.log(\"Fetching data...\");\n        this.setState({ loading: true })\n        axios\n          .get(`https://api.github.com/users/mshwery`)\n          .then(data => {\n            console.log(data);\n            this.setState({\n              loading: false,\n              username: data.data.name,\n              company: data.data.company\n            })\n          })\n          .catch(error => {\n            this.setState({ loading: false, error })\n          })\n        }\n\n        render() {\n            return(\n                <Layout>\n                    <h1>Github Hero is here</h1>\n                    {\n                        this.state.loading ? (\n                            <p>Fetching data from github...</p>\n                        ) : (\n                            <h2>{this.state.username} works at {this.state.company}</h2>\n                        )\n                    }\n                    <button onClick={ this.fetchGitHubInfo }>Fetch Data now</button>\n                </Layout>\n            )\n\n        }\n}\n\nexport default FetchGithubInfo\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nexport default ({ children }) => (\n  <div style={{ margin: `4rem auto`, maxWidth: '100%', padding: `0 1rem` }}>\n  My Sweet Site\n  <br/>\n  <Link to=\"/profile/\">profile</Link> \n  <br/>\n  <Link to=\"/\">home</Link> \n  <br/>\n  <Link to=\"/githubInfo\">GithubInfo</Link> \n\n\n    {children}\n  </div>\n)"],"sourceRoot":""}